---

- hosts: localhost
  vars:
    fedora_mirror: http://mirror.lstn.net/fedora/releases/32/Cloud/x86_64/images
    fedora_qcow: Fedora-Cloud-Base-32-1.6.x86_64.qcow2
  tasks:

    - name: Add user to kvm group
      user:
        name: "{{ ansible_user_id }}"
        groups: kvm
        append: yes
      become: yes

    - name: Reset ssh connection to add group
      meta: reset_connection

    - name: Run kvm-ok to verify KVM support
      command: kvm-ok
      become: yes

    - name: Start libvirtd
      systemd:
        name: libvirtd
        state: started
        enabled: yes
      become: yes

    - name: Verify that virsh works
      command: virsh list --all

    - name: Download Fedora QCOW image
      get_url:
        url: "{{ fedora_mirror }}/{{ fedora_qcow }}"
        dest: "/tmp/{{ fedora_qcow }}"

    - name: Write cloud-init user-data
      copy:
        dest: /tmp/user-data
        content: |
          #cloud-config
          ssh_authorized_keys:
            - {{ lookup('file', '/tmp/sshkey.pub') }}

    - name: Write cloud-init meta-data
      copy:
        dest: /tmp/meta-data
        content: |
          instance-id: testing

    - name: Create cloud-init ISO
      command: genisoimage -o /tmp/cloud-init.iso -V cidata -r -J user-data meta-data
      args:
        chdir: /tmp

    - name: Run virt-install to import qcow
      command: |
        virt-install \
          --name fedora-test \
          --memory 1024 \
          --vcpus 1 \
          --disk path=/tmp/{{ fedora_qcow }} \
          --disk path=/tmp/cloud-init.iso,device=cdrom \
          --import \
          --os-variant ubuntu18.04 \
          --noautoconsole \
          --network network=default
      become: yes

    - name: Get address of the new VM (takes time while it boots)
      command: virsh domifaddr fedora-test
      become: yes
      register: vm_address_check
      until: vm_address_check.stdout | regex_search("[0-9\.]*/24")
      retries: 60
      delay: 5

    - name: Get the IP address for the VM we just started
      set_fact:
        vm_ip: "{{ vm_address_check.stdout | regex_findall(\"([0-9\\.]*)/24\") | first }}"

    - name: Wait for the ssh daemon to start
      wait_for:
        host: "{{ vm_ip }}"
        port: 22
        timeout: 300

    - name: Add a dynamic host for the VM we made
      add_host:
        name: test_vm
        group: test_instances
        ansible_host: "{{ vm_ip }}"
        ansible_user: fedora
        ansible_password: secrete
        ansible_ssh_pipelining: yes

    - name: Write dynamic host file to disk
      copy:
        dest: /tmp/hosts.ini
        content: |
          [test_instances]
          test_vm ansible_host={{ vm_ip }} ansible_user=fedora ansible_password=secrete ansible_ssh_pipelining=True

    - name: Clone ansible-osbuild
      git:
        repo: https://github.com/osbuild/ansible-osbuild/
        dest: /tmp/ansible-osbuild
        version: master

- hosts: test_instances
  tasks:

    - name: Verify we're in the Fedora VM
      debug:
        var: ansible_distribution
