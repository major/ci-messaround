---

- hosts: localhost
  vars:
    fedora_mirror: http://mirror.lstn.net/fedora/releases/32/Cloud/x86_64/images
    fedora_qcow: Fedora-Cloud-Base-32-1.6.x86_64.qcow2
  tasks:

    - name: Install packages
      apt:
        name:
          - bridge-utils
          - cpu-checker
          - libguestfs-tools
          - libvirt-bin
          - libvirt-clients
          - libvirt-daemon
          - libvirt-daemon-system
          - kmod
          - qemu-kvm
          - virtinst
          - wget
        state: present
        update_cache: no
      become: yes

    - name: Add user to kvm group
      user:
        name: "{{ ansible_user_id }}"
        groups: kvm
        append: yes
      become: yes

    - name: Reset ssh connection to add group
      meta: reset_connection

    - name: Run kvm-ok to verify KVM support
      command: kvm-ok
      become: yes

    - name: Start libvirtd
      systemd:
        name: libvirtd
        state: started
        enabled: yes
      become: yes

    - name: Verify that virsh works
      command: virsh list --all

    - name: Download Fedora QCOW image
      get_url:
        url: "{{ fedora_mirror }}/{{ fedora_qcow }}"
        dest: "/tmp/{{ fedora_qcow }}"

    - name: Set password on the image and remove cloud-init
      command: |
        virt-customize -v -x -a /tmp/{{ fedora_qcow }} \
          --root-password password:secrete --uninstall cloud-init
      become: yes

    - name: Run virt-install to import qcow
      command: |
        virt-install \
          --name fedora-test \
          --memory 1024 \
          --vcpus 1 \
          --disk /tmp/{{ fedora_qcow }} \
          --import \
          --os-type linux \
          --noautoconsole \
          --network network=default

    - name: Get address of the new VM (takes time)
      command: virsh domifaddr fedora-test
      become: yes
      register: vm_address_check
      until: vm_address_check.stdout | regex_search("[0-9\.]*/24")
      retries: 60

    - name: Get the IP address for the VM we just started
      set_fact:
        vm_ip: vm_address_check.stdout | regex_findall("([0-9\.]*)/24") | first

    - name: Add a dynamic host for the VM we made
      add_host:
        name: test_vm
        group: testing_instances
        ansible_host: "{{ vm_ip }}"
        ansible_user: root
        ansible_password: secrete
        ansible_ssh_pipelining: yes

- hosts: testing_instances
  tasks:

    - name: Dump data
      debug:
        var: hostvars[inventory_hostname]
